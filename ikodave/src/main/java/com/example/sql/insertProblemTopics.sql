USE Ikodave;
INSERT INTO problem_topic (topic) VALUES ('Implementation');
INSERT INTO problem_topic (topic) VALUES ('Array');
INSERT INTO problem_topic (topic) VALUES ('Hash Table');
INSERT INTO problem_topic (topic) VALUES ('Graph');
INSERT INTO problem_topic (topic) VALUES ('Greedy');

INSERT INTO problem_topic (topic) VALUES ('String');
INSERT INTO problem_topic (topic) VALUES ('Two Pointers');
INSERT INTO problem_topic (topic) VALUES ('Dynamic Programming');
INSERT INTO problem_topic (topic) VALUES ('Stack');
INSERT INTO problem_topic (topic) VALUES ('Tree');
INSERT INTO problem_topic (topic) VALUES ('Binary Tree');
INSERT INTO problem_topic (topic) VALUES ('Depth-First Search');
INSERT INTO problem_topic (topic) VALUES ('Breadth-First Search');
INSERT INTO problem_topic (topic) VALUES ('Sorting');
INSERT INTO problem_topic (topic) VALUES ('Math');
INSERT INTO problem_topic (topic) VALUES ('Bit Manipulation');
INSERT INTO problem_topic (topic) VALUES ('Sliding Window');
INSERT INTO problem_topic (topic) VALUES ('Binary Search');
INSERT INTO problem_topic (topic) VALUES ('Linked List');
INSERT INTO problem_topic (topic) VALUES ('Recursion');
INSERT INTO problem_topic (topic) VALUES ('Backtracking');
INSERT INTO problem_topic (topic) VALUES ('Design');
INSERT INTO problem_topic (topic) VALUES ('Heap');
INSERT INTO problem_topic (topic) VALUES ('Queue');
INSERT INTO problem_topic (topic) VALUES ('Union Find');